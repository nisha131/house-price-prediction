import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split
file = "https://raw.githubusercontent.com/sarwansingh/Python/master/ClassExamples/data/Bengaluru_House_Data_clean.csv"
df = pd.read_csv(file)

X = df.drop(['Unnamed: 0', 'price'], axis='columns')
Y = df['price']
df.head(1)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

lrmodel = LinearRegression()
lrmodel.fit(X_train, Y_train)
Y_pred = lrmodel.predict(X_test)

mse = mean_squared_error(Y_test, Y_pred)
r2 = r2_score(Y_test, Y_pred)

print(f"Mean Squared Error: {mse:.2f}")
print(f"R^2 Score: {r2:.2f}")

def predictprice(location, sqft, bath, bhk):
    try:
        loc_index = np.where(X.columns == location)[0][0]
    except IndexError:
        raise ValueError("Location '{}' not found in the data columns.".format(location))

    x = np.zeros(len(X.columns))
    x[0] = sqft
    x[1] = bath
    x[2] = bhk
    if loc_index >= 0:
        x[loc_index] = 1

    return lrmodel.predict([x])[0]

locations = X.columns[5:]
locations


loc = 'location_column_name'  # Replace with an actual location name from 'locations'
sqft = 1200
bhk = 2
bath = 2


try:
    price = predictprice(loc, sqft, bath, bhk).round(3)
    print(f"Predicted Price: {price}")
except Exception as e:
    print(f"Error: {e}")
